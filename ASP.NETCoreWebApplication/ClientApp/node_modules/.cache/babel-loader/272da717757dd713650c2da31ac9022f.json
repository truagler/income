{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vopro\\\\RiderProjects\\\\ASP.NETCoreWebApplication\\\\ASP.NETCoreWebApplication\\\\ClientApp\\\\src\\\\components\\\\FetchData.tsx\";\nimport React, { Component } from \"react\";\nimport { TypeOperation } from \"../enum/TypeOperation\";\nimport { CategoryTypeOperation } from \"../enum/CategoryTypeOperation\";\nimport { Mapper } from \"../mapper/Mapper\";\nimport { Language } from \"../language/Language\";\nimport { BudgetModal } from \"../modal/BudgetModal\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openEditModal = () => {\n      this.setState({\n        isShowModal: true\n      });\n    };\n\n    this.openAddModal = () => {\n      this.setState({\n        isShowModal: true,\n        operation: {\n          id: 0,\n          createdDate: new Date(),\n          typeOperation: TypeOperation.income,\n          categoryTypeOperation: CategoryTypeOperation.car,\n          operationSum: 0,\n          description: \"\"\n        }\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isShowModal: false\n      });\n    };\n\n    this.state = {\n      operations: [],\n      operation: {\n        id: 0,\n        createdDate: new Date(),\n        typeOperation: TypeOperation.income,\n        categoryTypeOperation: CategoryTypeOperation.car,\n        operationSum: 0,\n        description: \"\"\n      },\n      revenue: 0,\n      isShowModal: false,\n      ids: [],\n      startDate: new Date(),\n      stopDate: new Date(),\n      month: new Date(),\n      year: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.getAllOperations();\n  }\n\n  async getOperation(id) {\n    const response = await fetch('getoperation?id=' + id.toString());\n    const data = await response.json();\n    const operation = Mapper.toBudgetViewModel(data);\n    this.setState({\n      operation: operation\n    });\n    this.openEditModal();\n  }\n\n  async getWeekOperation(startDate, stopDate) {\n    if (startDate < stopDate) return alert(\"Начальная дата не может быть больше конечной\");\n    const response = await fetch('getweekoperations?startDate=' + startDate.toDateString() + '&stopDate=' + stopDate.toDateString());\n    const data = await response.json();\n    const operations = Mapper.toBudgetViewModels(data);\n    this.setState({\n      operations: operations\n    });\n  }\n\n  async getMonthOperation(month) {\n    const response = await fetch('getmonthoperations?month=' + month.toDateString());\n    const data = await response.json();\n    const operations = Mapper.toBudgetViewModels(data);\n    this.setState({\n      operations: operations\n    });\n  }\n\n  async getYearOperation(year) {\n    const response = await fetch('getyearoperations?year=' + year.toDateString());\n    const data = await response.json();\n    const operations = Mapper.toBudgetViewModels(data);\n    this.setState({\n      operations: operations\n    });\n  }\n\n  async getAllOperations() {\n    const response = await fetch('getoperations');\n    const data = await response.json();\n    const operations = Mapper.toBudgetViewModels(data);\n    this.setState({\n      operations: operations\n    });\n    await this.getFullRevenue();\n  }\n\n  async getFullRevenue() {\n    const response = await fetch('getfullrevenue');\n    const data = await response.json();\n    const revenue = Number(data);\n    this.setState({\n      revenue: revenue\n    });\n  }\n\n  async removeOperation(id) {\n    await fetch('removeoperation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(id)\n    });\n    await this.getFullRevenue();\n  }\n\n  async removeOperations() {\n    if (this.state.ids.length == 0) return alert(\"Вы не выбрали ни одной операции\");\n    await fetch('removeoperations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(this.state.ids)\n    });\n    await this.getFullRevenue();\n  }\n\n  updateStartDate(e) {\n    const value = e.target.value;\n    const date = new Date(Date.parse(value));\n    this.setState({\n      startDate: date\n    });\n  }\n\n  updateStopDate(e) {\n    const value = e.target.value;\n    const date = new Date(Date.parse(value));\n    this.setState({\n      stopDate: date\n    });\n  }\n\n  updateMonthDate(e) {\n    const value = e.target.value;\n    const date = new Date(Date.parse(value));\n    this.setState({\n      month: date\n    });\n  }\n\n  updateYearDate(e) {\n    const value = e.target.value;\n    const date = new Date(Date.parse(value));\n    this.setState({\n      year: date\n    });\n  }\n\n  updateIds(e) {\n    const checked = e.target.checked;\n    const id = Number(e.target.value);\n\n    if (!this.state.ids.includes(id) && checked) {\n      this.state.ids.push(id);\n    }\n\n    if (this.state.ids.includes(id) && !checked) {\n      let index = this.state.ids.indexOf(id);\n      this.state.ids.splice(index, 1);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0412\\u0430\\u0448\\u0438 \\u0434\\u043E\\u0445\\u043E\\u0434\\u044B/\\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"\\u0414\\u0435\\u043D\\u044C\\u0433\\u0438 \\u043D\\u0430 \\u0432\\u0430\\u0448\\u0435\\u043C \\u0441\\u0447\\u0435\\u0442\\u0435: \", this.state.revenue, \" P\\u0443\\u0431\\u043B\\u0435\\u0439\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.openAddModal(),\n          className: \"btn btn-primary\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.removeOperations(),\n          className: \"btn btn-danger\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.getAllOperations(),\n          className: \"btn btn-success\",\n          children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439 \\u0437\\u0430 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u043D\\u0435\\u0434\\u0435\\u043B\\u0438: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateStartDate(e),\n                type: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u043D\\u0435\\u0434\\u0435\\u043B\\u0438: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateStopDate(e),\n                type: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.getWeekOperation(this.state.startDate, this.state.stopDate),\n                className: \"btn btn-primary\",\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439 \\u0437\\u0430 \\u043C\\u0435\\u0441\\u044F\\u0446\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateMonthDate(e),\n                type: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.getMonthOperation(this.state.month),\n                className: \"btn btn-primary\",\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0439 \\u0437\\u0430 \\u0433\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateYearDate(e),\n                type: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.getYearOperation(this.state.year),\n                className: \"btn btn-primary\",\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043F \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.operations.map(operation => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: operation.createdDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.getOperation(operation.id),\n              children: Language.toTypeOperation(operation.typeOperation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Language.toCategoryTypeOperation(operation.categoryTypeOperation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [operation.operationSum, \" \\u0420\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: operation.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => this.removeOperation(operation.id),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateIds(e),\n                value: operation.id,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, operation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BudgetModal, {\n        getAllOperation: () => this.getAllOperations(),\n        hide: () => this.closeModal(),\n        isShown: this.state.isShowModal,\n        operation: this.state.operation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["C:/Users/vopro/RiderProjects/ASP.NETCoreWebApplication/ASP.NETCoreWebApplication/ClientApp/src/components/FetchData.tsx"],"names":["React","Component","TypeOperation","CategoryTypeOperation","Mapper","Language","BudgetModal","Accordion","FetchData","constructor","props","openEditModal","setState","isShowModal","openAddModal","operation","id","createdDate","Date","typeOperation","income","categoryTypeOperation","car","operationSum","description","closeModal","state","operations","revenue","ids","startDate","stopDate","month","year","componentDidMount","getAllOperations","getOperation","response","fetch","toString","data","json","toBudgetViewModel","getWeekOperation","alert","toDateString","toBudgetViewModels","getMonthOperation","getYearOperation","getFullRevenue","Number","removeOperation","method","headers","body","JSON","stringify","removeOperations","length","updateStartDate","e","value","target","date","parse","updateStopDate","updateMonthDate","updateYearDate","updateIds","checked","includes","push","index","indexOf","splice","render","map","toTypeOperation","toCategoryTypeOperation","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,SAA5B,QAAsD,OAAtD;AAEA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAgBA,OAAO,MAAMC,SAAN,SAAwBP,SAAxB,CAAgD;AAGrDQ,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAkIxBC,aAlIwB,GAkIR,MAAK;AACnB,WAAKC,QAAL,CAAc;AAAGC,QAAAA,WAAW,EAAE;AAAhB,OAAd;AACD,KApIuB;;AAAA,SAqIxBC,YArIwB,GAqIT,MAAK;AAClB,WAAKF,QAAL,CAAc;AAAGC,QAAAA,WAAW,EAAE,IAAhB;AAAsBE,QAAAA,SAAS,EAAC;AAACC,UAAAA,EAAE,EAAE,CAAL;AAAQC,UAAAA,WAAW,EAAE,IAAIC,IAAJ,EAArB;AAAiCC,UAAAA,aAAa,EAAEjB,aAAa,CAACkB,MAA9D;AAAsEC,UAAAA,qBAAqB,EAAElB,qBAAqB,CAACmB,GAAnH;AAAwHC,UAAAA,YAAY,EAAE,CAAtI;AAAyIC,UAAAA,WAAW,EAAE;AAAtJ;AAAhC,OAAd;AACD,KAvIuB;;AAAA,SAyIxBC,UAzIwB,GAyIX,MAAK;AAChB,WAAKb,QAAL,CAAc;AAAGC,QAAAA,WAAW,EAAE;AAAhB,OAAd;AACD,KA3IuB;;AAEtB,SAAKa,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXZ,MAAAA,SAAS,EAAC;AACRC,QAAAA,EAAE,EAAE,CADI;AAERC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,EAFL;AAGRC,QAAAA,aAAa,EAAEjB,aAAa,CAACkB,MAHrB;AAIRC,QAAAA,qBAAqB,EAAElB,qBAAqB,CAACmB,GAJrC;AAKRC,QAAAA,YAAY,EAAE,CALN;AAMRC,QAAAA,WAAW,EAAE;AANL,OAFC;AAUXI,MAAAA,OAAO,EAAE,CAVE;AAWXf,MAAAA,WAAW,EAAE,KAXF;AAYXgB,MAAAA,GAAG,EAAC,EAZO;AAaXC,MAAAA,SAAS,EAAE,IAAIZ,IAAJ,EAbA;AAcXa,MAAAA,QAAQ,EAAE,IAAIb,IAAJ,EAdC;AAeXc,MAAAA,KAAK,EAAE,IAAId,IAAJ,EAfI;AAgBXe,MAAAA,IAAI,EAAE,IAAIf,IAAJ;AAhBK,KAAb;AAkBD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAEiB,QAAZC,YAAY,CAACpB,EAAD,EAAa;AAC7B,UAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqBtB,EAAE,CAACuB,QAAH,EAAtB,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAM1B,SAAS,GAAGX,MAAM,CAACsC,iBAAP,CAAyBF,IAAzB,CAAlB;AACA,SAAK5B,QAAL,CAAc;AAACG,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AACA,SAAKJ,aAAL;AACD;;AAEqB,QAAhBgC,gBAAgB,CAACb,SAAD,EAAkBC,QAAlB,EAAkC;AACtD,QAAGD,SAAS,GAAGC,QAAf,EAAyB,OAAOa,KAAK,CAAC,8CAAD,CAAZ;AACzB,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCR,SAAS,CAACe,YAAV,EAAjC,GAA4D,YAA5D,GAA2Ed,QAAQ,CAACc,YAAT,EAA5E,CAA5B;AACA,UAAML,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAMd,UAAU,GAAGvB,MAAM,CAAC0C,kBAAP,CAA0BN,IAA1B,CAAnB;AACA,SAAK5B,QAAL,CAAc;AAACe,MAAAA,UAAU,EAAEA;AAAb,KAAd;AACD;;AAEsB,QAAjBoB,iBAAiB,CAACf,KAAD,EAAc;AACnC,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BN,KAAK,CAACa,YAAN,EAA/B,CAA5B;AACA,UAAML,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAMd,UAAU,GAAGvB,MAAM,CAAC0C,kBAAP,CAA0BN,IAA1B,CAAnB;AACA,SAAK5B,QAAL,CAAc;AAACe,MAAAA,UAAU,EAAEA;AAAb,KAAd;AACD;;AAEqB,QAAhBqB,gBAAgB,CAACf,IAAD,EAAa;AACjC,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4BL,IAAI,CAACY,YAAL,EAA7B,CAA5B;AACA,UAAML,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAMd,UAAU,GAAGvB,MAAM,CAAC0C,kBAAP,CAA0BN,IAA1B,CAAnB;AACA,SAAK5B,QAAL,CAAc;AAACe,MAAAA,UAAU,EAAEA;AAAb,KAAd;AACD;;AAEqB,QAAhBQ,gBAAgB,GAAG;AACvB,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,UAAME,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAMd,UAAU,GAAGvB,MAAM,CAAC0C,kBAAP,CAA0BN,IAA1B,CAAnB;AACA,SAAK5B,QAAL,CAAc;AAACe,MAAAA,UAAU,EAAEA;AAAb,KAAd;AACA,UAAM,KAAKsB,cAAL,EAAN;AACD;;AAEmB,QAAdA,cAAc,GAAG;AACrB,UAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B;AACA,UAAME,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,UAAMb,OAAO,GAAGsB,MAAM,CAACV,IAAD,CAAtB;AACA,SAAK5B,QAAL,CAAc;AAACgB,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACD;;AAEoB,QAAfuB,eAAe,CAACnC,EAAD,EAAa;AAChC,UAAMsB,KAAK,CAAC,iBAAD,EAAoB;AAC7Bc,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAexC,EAAf;AALuB,KAApB,CAAX;AAOA,UAAM,KAAKiC,cAAL,EAAN;AACD;;AAEqB,QAAhBQ,gBAAgB,GAAG;AACvB,QAAG,KAAK/B,KAAL,CAAWG,GAAX,CAAe6B,MAAf,IAAyB,CAA5B,EAA+B,OAAOd,KAAK,CAAC,iCAAD,CAAZ;AAC/B,UAAMN,KAAK,CAAC,kBAAD,EAAqB;AAC9Bc,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqB;AAK9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK9B,KAAL,CAAWG,GAA1B;AALwB,KAArB,CAAX;AAOA,UAAM,KAAKoB,cAAL,EAAN;AACD;;AAEDU,EAAAA,eAAe,CAACC,CAAD,EAAiC;AAC9C,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAI7C,IAAJ,CAASA,IAAI,CAAC8C,KAAL,CAAWH,KAAX,CAAT,CAAb;AACA,SAAKjD,QAAL,CAAc;AAACkB,MAAAA,SAAS,EAAEiC;AAAZ,KAAd;AACD;;AAEDE,EAAAA,cAAc,CAACL,CAAD,EAAiC;AAC7C,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAI7C,IAAJ,CAASA,IAAI,CAAC8C,KAAL,CAAWH,KAAX,CAAT,CAAb;AACA,SAAKjD,QAAL,CAAc;AAACmB,MAAAA,QAAQ,EAAEgC;AAAX,KAAd;AACD;;AAEDG,EAAAA,eAAe,CAACN,CAAD,EAAiC;AAC9C,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAI7C,IAAJ,CAASA,IAAI,CAAC8C,KAAL,CAAWH,KAAX,CAAT,CAAb;AACA,SAAKjD,QAAL,CAAc;AAACoB,MAAAA,KAAK,EAAE+B;AAAR,KAAd;AACD;;AAEDI,EAAAA,cAAc,CAACP,CAAD,EAAiC;AAC7C,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAG,IAAI7C,IAAJ,CAASA,IAAI,CAAC8C,KAAL,CAAWH,KAAX,CAAT,CAAb;AACA,SAAKjD,QAAL,CAAc;AAACqB,MAAAA,IAAI,EAAE8B;AAAP,KAAd;AACD;;AAEDK,EAAAA,SAAS,CAACR,CAAD,EAAkC;AACzC,UAAMS,OAAO,GAAGT,CAAC,CAACE,MAAF,CAASO,OAAzB;AACA,UAAMrD,EAAE,GAAGkC,MAAM,CAACU,CAAC,CAACE,MAAF,CAASD,KAAV,CAAjB;;AACA,QAAG,CAAC,KAAKnC,KAAL,CAAWG,GAAX,CAAeyC,QAAf,CAAwBtD,EAAxB,CAAD,IAAgCqD,OAAnC,EAA2C;AACzC,WAAK3C,KAAL,CAAWG,GAAX,CAAe0C,IAAf,CAAoBvD,EAApB;AACD;;AACD,QAAG,KAAKU,KAAL,CAAWG,GAAX,CAAeyC,QAAf,CAAwBtD,EAAxB,KAA+B,CAACqD,OAAnC,EAA2C;AACzC,UAAIG,KAAK,GAAG,KAAK9C,KAAL,CAAWG,GAAX,CAAe4C,OAAf,CAAuBzD,EAAvB,CAAZ;AACA,WAAKU,KAAL,CAAWG,GAAX,CAAe6C,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF;;AAaDG,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,0IAA2B,KAAKjD,KAAL,CAAWE,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKd,YAAL,EAAvB;AAA4C,UAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK2C,gBAAL,EAAvB;AAAgD,UAAA,SAAS,EAAC,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,EAAvB;AAAgD,UAAA,SAAS,EAAC,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,SAAD;AAAA,gCACE,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,QAAQ,EAAC,GAAzB;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eACwB;AAAO,gBAAA,QAAQ,EAAGyB,CAAD,IAAO,KAAKD,eAAL,CAAqBC,CAArB,CAAxB;AAAiD,gBAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,sBADxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eACuB;AAAO,gBAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKK,cAAL,CAAoBL,CAApB,CAAxB;AAAgD,gBAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,sBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKjB,gBAAL,CAAsB,KAAKjB,KAAL,CAAWI,SAAjC,EAA4C,KAAKJ,KAAL,CAAWK,QAAvD,CAAvB;AAA0F,gBAAA,SAAS,EAAC,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,QAAQ,EAAC,GAAzB;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eACuB;AAAO,gBAAA,QAAQ,EAAG6B,CAAD,IAAO,KAAKM,eAAL,CAAqBN,CAArB,CAAxB;AAAiD,gBAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,sBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKb,iBAAL,CAAuB,KAAKrB,KAAL,CAAWM,KAAlC,CAAvB;AAAiE,gBAAA,SAAS,EAAC,iBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eA0BE,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,QAAQ,EAAC,GAAzB;AAAA,kCACE,QAAC,SAAD,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,CAAW,IAAX;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eACuB;AAAO,gBAAA,QAAQ,EAAG4B,CAAD,IAAO,KAAKO,cAAL,CAAoBP,CAApB,CAAxB;AAAgD,gBAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,sBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKZ,gBAAL,CAAsB,KAAKtB,KAAL,CAAWO,IAAjC,CAAvB;AAA+D,gBAAA,SAAS,EAAC,iBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAiDE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA,gCACE;AAAA,iCACA;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA,oBACC,KAAKP,KAAL,CAAWC,UAAX,CAAsBiD,GAAtB,CAA0B7D,SAAS,iBAChC;AAAA,oCACE;AAAA,wBAAKA,SAAS,CAACE,WAAV,CAAsBsB,QAAtB;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,OAAO,EAAE,MAAM,KAAKH,YAAL,CAAkBrB,SAAS,CAACC,EAA5B,CAAnB;AAAA,wBAAqDX,QAAQ,CAACwE,eAAT,CAAyB9D,SAAS,CAACI,aAAnC;AAArD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKd,QAAQ,CAACyE,uBAAT,CAAiC/D,SAAS,CAACM,qBAA3C;AAAL;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,yBAAKN,SAAS,CAACQ,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKR,SAAS,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,qCAAI;AAAQ,gBAAA,SAAS,EAAC,gBAAlB;AAAmC,gBAAA,OAAO,EAAE,MAAM,KAAK2B,eAAL,CAAqBpC,SAAS,CAACC,EAA/B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA,qCAAI;AAAO,gBAAA,QAAQ,EAAG4C,CAAD,IAAO,KAAKQ,SAAL,CAAeR,CAAf,CAAxB;AAA2C,gBAAA,KAAK,EAAE7C,SAAS,CAACC,EAA5D;AAAgE,gBAAA,IAAI,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAASD,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDF,eA2EE,QAAC,WAAD;AAAa,QAAA,eAAe,EAAE,MAAM,KAAKmB,gBAAL,EAApC;AAA6D,QAAA,IAAI,EAAE,MAAM,KAAKV,UAAL,EAAzE;AAA4F,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWb,WAAhH;AAA6H,QAAA,SAAS,EAAE,KAAKa,KAAL,CAAWX;AAAnJ;AAAA;AAAA;AAAA;AAAA,cA3EF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+ED;;AAjOoD;AAA1CP,S,CACJuE,W,GAAcvE,SAAS,CAACwE,I","sourcesContent":["import React, {ChangeEvent, Component, useState} from \"react\";\r\nimport {BudgetView} from \"../model/BudgetView\";\r\nimport {TypeOperation} from \"../enum/TypeOperation\";\r\nimport {CategoryTypeOperation} from \"../enum/CategoryTypeOperation\";\r\nimport {Mapper} from \"../mapper/Mapper\";\r\nimport {Language} from \"../language/Language\";\r\nimport {BudgetModal} from \"../modal/BudgetModal\";\r\nimport Accordion from 'react-bootstrap/Accordion'\r\n\r\nexport interface Props{}\r\n\r\ntype State = {\r\n  operations: BudgetView[];\r\n  operation: BudgetView;\r\n  revenue: number;\r\n  isShowModal: boolean;\r\n  ids: number[];\r\n  startDate: Date;\r\n  stopDate: Date;\r\n  month: Date;\r\n  year: Date;\r\n}\r\n\r\nexport class FetchData extends Component<Props, State> {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { \r\n      operations: [],\r\n      operation:{\r\n        id: 0,\r\n        createdDate: new Date(),\r\n        typeOperation: TypeOperation.income,\r\n        categoryTypeOperation: CategoryTypeOperation.car,\r\n        operationSum: 0,\r\n        description: \"\"\r\n      },\r\n      revenue: 0,\r\n      isShowModal: false,\r\n      ids:[],\r\n      startDate: new Date(),\r\n      stopDate: new Date(),\r\n      month: new Date(),\r\n      year: new Date()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllOperations();\r\n  }\r\n  \r\n  async getOperation(id: number) {\r\n    const response = await fetch('getoperation?id=' + id.toString());\r\n    const data = await response.json();\r\n    const operation = Mapper.toBudgetViewModel(data);\r\n    this.setState({operation: operation});\r\n    this.openEditModal();\r\n  }\r\n  \r\n  async getWeekOperation(startDate: Date, stopDate: Date) {\r\n    if(startDate < stopDate) return alert(\"Начальная дата не может быть больше конечной\")\r\n    const response = await fetch('getweekoperations?startDate=' + startDate.toDateString() + '&stopDate=' + stopDate.toDateString());\r\n    const data = await response.json();\r\n    const operations = Mapper.toBudgetViewModels(data);\r\n    this.setState({operations: operations});\r\n  }\r\n  \r\n  async getMonthOperation(month: Date) {\r\n    const response = await fetch('getmonthoperations?month=' + month.toDateString());\r\n    const data = await response.json();\r\n    const operations = Mapper.toBudgetViewModels(data);\r\n    this.setState({operations: operations});\r\n  }\r\n  \r\n  async getYearOperation(year: Date) {\r\n    const response = await fetch('getyearoperations?year=' + year.toDateString());\r\n    const data = await response.json();\r\n    const operations = Mapper.toBudgetViewModels(data);\r\n    this.setState({operations: operations});\r\n  }\r\n  \r\n  async getAllOperations() {\r\n    const response = await fetch('getoperations');\r\n    const data = await response.json();\r\n    const operations = Mapper.toBudgetViewModels(data);\r\n    this.setState({operations: operations});\r\n    await this.getFullRevenue();\r\n  }\r\n  \r\n  async getFullRevenue() {\r\n    const response = await fetch('getfullrevenue');\r\n    const data = await response.json();\r\n    const revenue = Number(data);\r\n    this.setState({revenue: revenue});\r\n  }\r\n  \r\n  async removeOperation(id: number) {\r\n    await fetch('removeoperation', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(id)\r\n    });\r\n    await this.getFullRevenue();\r\n  }\r\n\r\n  async removeOperations() {\r\n    if(this.state.ids.length == 0) return alert(\"Вы не выбрали ни одной операции\");\r\n    await fetch('removeoperations', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(this.state.ids)\r\n    });\r\n    await this.getFullRevenue();\r\n  }\r\n\r\n  updateStartDate(e:ChangeEvent<HTMLInputElement>){\r\n    const value = e.target.value;\r\n    const date = new Date(Date.parse(value));\r\n    this.setState({startDate: date})\r\n  }\r\n\r\n  updateStopDate(e:ChangeEvent<HTMLInputElement>){\r\n    const value = e.target.value;\r\n    const date = new Date(Date.parse(value));\r\n    this.setState({stopDate: date})\r\n  }\r\n\r\n  updateMonthDate(e:ChangeEvent<HTMLInputElement>){\r\n    const value = e.target.value;\r\n    const date = new Date(Date.parse(value));\r\n    this.setState({month: date})\r\n  }\r\n\r\n  updateYearDate(e:ChangeEvent<HTMLInputElement>){\r\n    const value = e.target.value;\r\n    const date = new Date(Date.parse(value));\r\n    this.setState({year: date})\r\n  }\r\n  \r\n  updateIds(e:ChangeEvent<HTMLInputElement>) {\r\n    const checked = e.target.checked;\r\n    const id = Number(e.target.value);\r\n    if(!this.state.ids.includes(id) && checked){\r\n      this.state.ids.push(id);\r\n    }\r\n    if(this.state.ids.includes(id) && !checked){\r\n      let index = this.state.ids.indexOf(id);\r\n      this.state.ids.splice(index, 1)\r\n    }\r\n  }\r\n  \r\n  openEditModal = () =>{\r\n    this.setState({  isShowModal: true});\r\n  }\r\n  openAddModal = () =>{\r\n    this.setState({  isShowModal: true, operation:{id: 0, createdDate: new Date(), typeOperation: TypeOperation.income, categoryTypeOperation: CategoryTypeOperation.car, operationSum: 0, description: \"\"}});\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({  isShowModal: false});\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>Ваши доходы/расходы</h1>\r\n        <div>\r\n          <b>Деньги на вашем счете: {this.state.revenue} Pублей</b>\r\n        </div>\r\n        <hr/>\r\n        <div>\r\n          <button onClick={() => this.openAddModal()} className=\"btn btn-primary\">Добавить</button>\r\n          <button onClick={() => this.removeOperations()} className=\"btn btn-danger\">Удалить несколько</button>\r\n          <button onClick={() => this.getAllOperations()} className=\"btn btn-success\">Получить все операции</button>\r\n        </div>\r\n        <Accordion>\r\n          <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header>Получние операций за период</Accordion.Header>\r\n            <Accordion.Body>\r\n              <div>\r\n                <b>Начало недели: </b><input onChange={(e) => this.updateStartDate(e)} type=\"date\"/>\r\n              </div>\r\n              <div>\r\n                <b>Конец недели: </b><input onChange={(e) => this.updateStopDate(e)} type=\"date\"/>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => this.getWeekOperation(this.state.startDate, this.state.stopDate )} className=\"btn btn-primary\">Получить данные</button>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <Accordion.Header>Получение операций за месяц</Accordion.Header>\r\n            <Accordion.Body>\r\n              <div>\r\n                <b>Введите дату: </b><input onChange={(e) => this.updateMonthDate(e)} type=\"date\"/>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => this.getMonthOperation(this.state.month)} className=\"btn btn-primary\">Получить данные</button>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"2\">\r\n            <Accordion.Header>Получение операций за год</Accordion.Header>\r\n            <Accordion.Body>\r\n              <div>\r\n                <b>Введите дату: </b><input onChange={(e) => this.updateYearDate(e)} type=\"date\"/>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => this.getYearOperation(this.state.year)} className=\"btn btn-primary\">Получить данные</button>\r\n              </div>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n        <table className='table table-striped'>\r\n          <thead>\r\n          <tr>\r\n            <th>Дата операции</th>\r\n            <th>Тип операции</th>\r\n            <th>Категория</th>\r\n            <th>Сумма операции</th>\r\n            <th>Описание</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.operations.map(operation =>\r\n              <tr key={operation.id}>\r\n                <td>{operation.createdDate.toString()}</td>\r\n                <td onClick={() => this.getOperation(operation.id)}>{Language.toTypeOperation(operation.typeOperation)}</td>\r\n                <td>{Language.toCategoryTypeOperation(operation.categoryTypeOperation)}</td>\r\n                <td>{operation.operationSum} Р</td>\r\n                <td>{operation.description}</td>\r\n                <td><button className=\"btn btn-danger\" onClick={() => this.removeOperation(operation.id)}>Удалить</button></td>\r\n                <td><input onChange={(e) => this.updateIds(e)} value={operation.id} type=\"checkbox\"/></td>\r\n              </tr>\r\n          )}\r\n          </tbody>\r\n        </table>\r\n        <BudgetModal getAllOperation={() => this.getAllOperations()} hide={() => this.closeModal()} isShown={this.state.isShowModal} operation={this.state.operation}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}